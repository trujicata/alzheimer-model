# %%
import start  # noqa
from models.core.dataset import ADNIDataModule

# %%
datamodule = ADNIDataModule(
    train_path="data/test.hdf5", val_path="data/test.hdf5", num_workers=1
)

# %%
datamodule.setup("eval")

# %%
train_dataset = datamodule.train_dataset
# %%
sample = train_dataset[0]
# %%
from torchvision import transforms as T
import numpy as np

# %%
mean = np.array(
    [
        478.56992,
        1230.7719,
        1284.911,
        1383.7255,
        950.3448,
        183.8899,
        961.3365,
        1351.5012,
        1278.9474,
        1196.3671,
        401.97086,
        393.49127,
        1026.4668,
        1088.3793,
        1158.6646,
        721.02747,
        149.86266,
        841.9725,
        1337.7664,
        1308.2362,
        1272.4242,
        589.32355,
        379.52365,
        1159.1705,
        1302.0388,
        1386.908,
        1039.4355,
        229.56317,
        830.476,
        1341.1252,
        1267.3239,
        1257.5446,
        509.59695,
        366.8631,
        1151.2472,
        1297.4442,
        1345.0524,
        973.85547,
        203.38054,
        635.9472,
        1128.7303,
        1085.7762,
        1086.6058,
        466.86636,
        268.67218,
        935.1863,
        1126.2089,
        1136.7953,
        855.1349,
        201.2353,
        651.26917,
        1309.1353,
        1267.5731,
        1322.0432,
        650.54987,
        251.76942,
        1039.1615,
        1344.5199,
        1359.4995,
        1149.9596,
        356.32077,
        591.131,
        1288.676,
        1265.3391,
        1342.4706,
        712.20685,
        200.28271,
        1012.9402,
        1351.8512,
        1305.8424,
        1145.5883,
        321.64398,
        536.8903,
        1260.0659,
        1290.1368,
        1379.5667,
        885.61304,
        193.63588,
        953.9097,
        1355.8629,
        1330.2305,
        1214.5541,
        465.2929,
        478.56992,
        1230.7719,
        1284.911,
        1383.7255,
        950.3448,
        183.8899,
        961.3365,
        1351.5012,
        1278.9474,
        1196.3671,
        401.97086,
        393.49127,
        1026.4668,
        1088.3793,
        1158.6646,
        721.02747,
        149.86266,
        841.9725,
        1337.7664,
        1308.2362,
        1272.4242,
        589.32355,
        379.52365,
        1159.1705,
        1302.0388,
        1386.908,
        1039.4355,
        229.56317,
        830.476,
        1341.1252,
        1267.3239,
        1257.5446,
        509.59695,
        366.8631,
        1151.2472,
        1297.4442,
        1345.0524,
        973.85547,
        203.38054,
        635.9472,
        1128.7303,
        1085.7762,
        1086.6058,
        466.86636,
        268.67218,
        935.1863,
        1126.2089,
        1136.7953,
        855.1349,
        201.2353,
        651.26917,
        1309.1353,
        1267.5731,
        1322.0432,
        650.54987,
        251.76942,
        1039.1615,
        1344.5199,
        1359.4995,
        1149.9596,
        356.32077,
        591.131,
        1288.676,
        1265.3391,
        1342.4706,
        712.20685,
        200.28271,
        1012.9402,
        1351.8512,
        1305.8424,
        1145.5883,
        321.64398,
        536.8903,
        1260.0659,
        1290.1368,
        1379.5667,
        885.61304,
        193.63588,
        953.9097,
        1355.8629,
        1330.2305,
        1214.5541,
        465.2929,
    ]
)
std = np.array(
    [
        896.16534,
        1227.7538,
        1097.158,
        1232.7734,
        1193.4985,
        317.51657,
        1159.7015,
        1191.3645,
        1113.6284,
        1219.8297,
        793.5165,
        806.6425,
        1151.6964,
        1063.734,
        1181.0564,
        1064.2158,
        242.24323,
        1143.9052,
        1204.7063,
        1123.5718,
        1233.8314,
        1006.25287,
        785.8825,
        1217.656,
        1117.807,
        1213.4998,
        1212.6007,
        495.83798,
        1103.4359,
        1200.6356,
        1098.2601,
        1220.6832,
        915.48096,
        750.0103,
        1182.0195,
        1129.559,
        1185.8143,
        1178.7158,
        423.00613,
        1007.7332,
        1167.8448,
        1054.0862,
        1183.8809,
        885.6561,
        625.26154,
        1131.6893,
        1109.0293,
        1138.008,
        1127.6217,
        451.77536,
        1036.5189,
        1230.2327,
        1099.5869,
        1252.738,
        1047.1045,
        564.79926,
        1221.0259,
        1188.4371,
        1196.6973,
        1251.0714,
        753.7693,
        994.93677,
        1230.2781,
        1098.4331,
        1252.9774,
        1084.5908,
        402.76917,
        1203.1329,
        1195.3562,
        1151.8196,
        1244.9111,
        690.19824,
        958.1053,
        1254.9114,
        1121.2975,
        1264.2578,
        1184.4945,
        386.09015,
        1203.1975,
        1212.3135,
        1172.4365,
        1253.4158,
        898.8322,
        896.16534,
        1227.7538,
        1097.158,
        1232.7734,
        1193.4985,
        317.51657,
        1159.7015,
        1191.3645,
        1113.6284,
        1219.8297,
        793.5165,
        806.6425,
        1151.6964,
        1063.734,
        1181.0564,
        1064.2158,
        242.24323,
        1143.9052,
        1204.7063,
        1123.5718,
        1233.8314,
        1006.25287,
        785.8825,
        1217.656,
        1117.807,
        1213.4998,
        1212.6007,
        495.83798,
        1103.4359,
        1200.6356,
        1098.2601,
        1220.6832,
        915.48096,
        750.0103,
        1182.0195,
        1129.559,
        1185.8143,
        1178.7158,
        423.00613,
        1007.7332,
        1167.8448,
        1054.0862,
        1183.8809,
        885.6561,
        625.26154,
        1131.6893,
        1109.0293,
        1138.008,
        1127.6217,
        451.77536,
        1036.5189,
        1230.2327,
        1099.5869,
        1252.738,
        1047.1045,
        564.79926,
        1221.0259,
        1188.4371,
        1196.6973,
        1251.0714,
        753.7693,
        994.93677,
        1230.2781,
        1098.4331,
        1252.9774,
        1084.5908,
        402.76917,
        1203.1329,
        1195.3562,
        1151.8196,
        1244.9111,
        690.19824,
        958.1053,
        1254.9114,
        1121.2975,
        1264.2578,
        1184.4945,
        386.09015,
        1203.1975,
        1212.3135,
        1172.4365,
        1253.4158,
        898.8322,
    ]
)
# %%
image = sample["image"]

# %%
norm = T.Normalize(mean=mean, std=std)
tensor = T.ToTensor()
# %%
image_t = tensor(image)

# %%
import torch

image_t = torch.from_numpy(image)
image_t.shape
# %%
norm(image_t).shape
# %%
